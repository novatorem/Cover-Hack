{"version":3,"sources":["react-components/BaseReactComponent/index.js","actions/cover.js","react-components/Cover/delete.js","react-components/Shared/info.js","react-components/Parse/para.js","react-components/Parse/index.js","react-components/Shared/dimensions.js","react-components/Cover/page.js","react-components/Cover/new.js","actions/helpers.js","actions/user.js","react-components/Cover/drawers.js","react-components/Shared/snackbar.js","react-components/Cover/index.js","react-components/Dashboard/index.js","MainView.js","react-components/Login/password.js","react-components/Login/index.js","App.js","serviceWorker.js","index.js"],"names":["BaseReactComponent","stopLogging","this","_subscription","subscribe","state","setState","filterState","bind","filteredState","getState","isPlainObject","Error","unsubscribe","React","Component","getUserCovers","url","fetch","then","res","status","json","alert","catch","error","console","log","saveUserCover","a","Promise","resolve","setTimeout","cover","undefined","_id","id","request","Request","method","body","JSON","stringify","data","headers","Accept","deleteUserCover","PaperComponent","props","handle","cancel","Paper","darkTheme","createMuiTheme","palette","type","Delete","useState","value","setValue","setError","helperText","setHelperText","handleClose","handleDelete","title","ThemeProvider","theme","Dialog","open","onClose","aria-labelledby","DialogTitle","style","cursor","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","onChange","event","target","onKeyDown","e","keyCode","DialogActions","Button","onClick","color","FullScreenDialog","maxWidth","currentUser","useStyles","makeStyles","avatar","backgroundColor","blue","SimpleDialog","classes","selectedValue","handleListItemClick","List","paragraphs","map","paragraph","substring","length","ListItem","button","split","key","ListItemAvatar","Avatar","className","ListItemText","primary","Para","setOpen","setSelectedValue","Typography","align","Grid","container","justify","variant","aria-label","paraArr","closureCount","store","MUITextField","withStyles","root","marginTop","marginBottom","MUIFormControl","FormControl","MUIButton","position","bottom","MUITypography","overflow","height","inputArr","inputCount","selectArr","selectCount","paraCount","paragraphData","CSelect","match","push","matches","menus","forEach","single","MenuItem","Select","createSelectors","element","index","array","listRegx","select","indx","exec","splice","filter","item","filterParagraphs","paraData","createParagraphs","Parse","sourceStr","input","i","size","reduce","b","concat","flat","getAll","whiteSpace","inRaw","slRaw","paRaw","rawList","pop","rawCount","dataPoint","tParaArr","slice","j","join","navigator","clipboard","writeText","startIcon","getWindowDimensions","window","width","innerWidth","innerHeight","flexGrow","paper","padding","spacing","text","secondary","MUIGrid","paddingLeft","paddingRight","MUIHeader","MUIPaper","Page","setData","direction","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","dimensions","alignItems","xs","noWrap","Divider","multiline","InputProps","disableUnderline","extendedIcon","marginRight","overrides","MuiInput","underline","borderBottom","MuiInputLabel","NewCover","name","setName","handleCreate","owner","newCover","Fab","PaperProps","setEmptyState","username","password","updateLoginForm","field","login","userID","register","logout","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","titleTypo","flex","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","justifyContent","content","paddingTop","backgroundImage","backgroundRepeat","backgroundSize","contentShift","textTransform","VerticalDrawer","defaultContent","defaultCover","setCover","anchorEl","setAnchorEl","setContent","setTitle","selectedIndex","setSelectedIndex","menuClose","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","ListItemIcon","fontSize","Drawer","anchor","userCovers","userCover","currentDraw","selected","Alert","elevation","Snackbar","reason","autoHideDuration","severity","message","Cover","coverShort","coverSuccess","info","deleteC","saveSuccess","deleteSuccess","Fragment","Container","disableGutters","Dashboard","history","MainView","exact","path","render","flexWrap","withoutLabel","textField","MuiIconButton","MuiInputBase","InputAdornments","prop","showPassword","values","setValues","InputLabel","htmlFor","Input","required","endAdornment","InputAdornment","onMouseDown","preventDefault","Login","failedLogin","invalidUsername","passwordShort","registered","App","location","hostname","startLogging","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.adbb9eb6.chunk.js","sourcesContent":["import { isPlainObject } from \"lodash-es\";\nimport React from \"react\";\nimport { getState, subscribe, unsubscribe, stopLogging } from \"statezero\";\n\nclass BaseReactComponent extends React.Component {\n  componentWillMount() {\n    stopLogging();\n    const callback = state => {\n      this.setState(state);\n    };\n    this._subscription = subscribe(callback, this.filterState.bind(this));\n    const filteredState = this.filterState(getState());\n    if (!isPlainObject(filteredState)) {\n      throw new Error(\"The result of filterState() must be an object\");\n    }\n    this.setState(filteredState);\n  }\n\n  componentWillUnmount() {\n    unsubscribe(this._subscription);\n  }\n\n  filterState() {\n    // Sub-classes must override this method.\n    throw new Error(\"filterState() is not implemented\");\n  }\n}\n\nexport default BaseReactComponent;\n","// getState is used to get the value of a state path\n// setState is used to set the value of a state path\nimport { getState, setState } from \"statezero\";\n\nexport const newCover = title => {\n  const url = \"/covers/new\";\n\n  //Early error detection\n  if ((title.length > 12) ^ (title.length < 1)) {\n    setState(\"coverShort\", true);\n    setTimeout(function() {\n      setState(\"coverShort\", false);\n    }, 3250);\n    return;\n  }\n\n  // Create our request constructor with all the parameters we need\n  const request = new Request(url, {\n    method: \"post\",\n    body: JSON.stringify({\n      owner: getState(\"userID\"),\n      title: title,\n      data: \"\"\n    }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  // Send the request with fetch()\n  fetch(request)\n    .then(res => {\n      if (res.status === 200) {\n        setState(\"coverSuccess\", true);\n        setTimeout(function() {\n          setState(\"coverSuccess\", false);\n        }, 3250);\n        getUserCovers();\n        return res.json();\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const getUserCovers = () => {\n  // the URL for the request\n  const url = \"/covers/\" + getState(\"userID\");\n\n  // Since this is a GET request, simply call fetch on the URL\n  fetch(url)\n    .then(res => {\n      if (res.status === 200) {\n        // return a promise that resolves with the JSON body\n        return res.json();\n      } else {\n        alert(\"Could not get anything\");\n      }\n    })\n    .then(json => {\n      // the resolved promise with the JSON body\n      setState(\"userCovers\", json);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const saveUserCover = async () => {\n  // Wait 0.5 seconds to make sure the state is updated\n  await new Promise(resolve => setTimeout(resolve, 500));\n  const cover = getState(\"cover\");\n  \n  // Oddly, it's _id for some, id for others\n  let url;\n  if (cover._id !== undefined) {\n    url = \"/covers/\" + cover._id;\n  } else {\n    url = \"/covers/\" + cover.id;\n  }\n\n  const request = new Request(url, {\n    method: \"PATCH\",\n    body: JSON.stringify({\n      data: cover.data\n    }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  // Send the request with fetch()\n  fetch(request)\n    .then(res => {\n      if (res.status === 200) {\n        setState(\"saveSuccess\", true);\n        setTimeout(function() {\n          setState(\"saveSuccess\", false);\n        }, 3250);\n        return res.json();\n      } else {\n        console.log(res);\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const deleteUserCover = async () => {\n  // Wait 0.5 seconds to make sure the state is updated\n  await new Promise(resolve => setTimeout(resolve, 500));\n  const cover = getState(\"cover\");\n  \n  // Oddly, it's _id for some, id for others\n  let url;\n  if (cover._id !== undefined) {\n    url = \"/covers/\" + cover._id;\n  } else {\n    url = \"/covers/\" + cover.id;\n  }\n\n  const request = new Request(url, {\n    method: \"DELETE\",\n    body: JSON.stringify({\n      data: cover.data\n    }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  // Send the request with fetch()\n  fetch(request)\n    .then(res => {\n      if (res.status === 200) {\n        setState(\"deleteSuccess\", true);\n        setTimeout(function() {\n          setState(\"deleteSuccess\", false);\n        }, 3250);\n        getUserCovers();\n        return res.json();\n      } else {\n        console.log(res);\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};","import React from \"react\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport { setState } from \"statezero\";\nimport { deleteUserCover } from \"../../actions/cover\";\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nexport default function Delete(props) {\n  const [value, setValue] = React.useState(\"\");\n  const [error, setError] = React.useState(false);\n  const [helperText, setHelperText] = React.useState(\"\");\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleClose = () => {\n    setState(\"deleteC\", false);\n  };\n\n  const handleDelete = () => {\n    if (value === props.title) {\n      deleteUserCover();\n      handleClose();\n    } else {\n      setError(true);\n      setHelperText(\"Incorrect Title\");\n    }\n  };\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Dialog\n        open={true}\n        onClose={handleClose}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\n          Delete Cover\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To delete, please re-enter the title of the cover letter you'd like\n            to delete ({props.title}).\n          </DialogContentText>\n          <TextField\n            autoFocus\n            error={error}\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Cover Letter Title\"\n            helperText={helperText}\n            type=\"title\"\n            fullWidth\n            value={value}\n            onChange={handleChange}\n            onKeyDown={e => {\n              if (e.keyCode === 13) {\n                handleDelete();\n              }\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleDelete} color=\"secondary\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport { setState } from \"statezero\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nexport default function FullScreenDialog(props) {\n\n  const handleClose = () => {\n    setState(\"info\", false);\n  };\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Dialog fullWidth={true} maxWidth=\"lg\" open={true} onClose={handleClose}>\n        <DialogTitle id=\"max-width-dialog-title\">Cover Hack</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Hi there, {props.currentUser}.</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport List from \"@material-ui/core/List\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { blue } from \"@material-ui/core/colors\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport SubjectIcon from \"@material-ui/icons/Subject\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClearAllIcon from \"@material-ui/icons/ClearAll\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n    >\n      <DialogTitle id=\"simple-dialog-title\">Add a Paragraph</DialogTitle>\n      <List>\n        {props.paragraphs.map(\n          paragraph => (\n            (paragraph = paragraph[0].substring(1, paragraph[0].length - 1)),\n            (\n              <ListItem\n                button\n                onClick={() => handleListItemClick(paragraph.split(\"|\")[1])}\n                key={paragraph.split(\"|\")[1]}\n              >\n                <ListItemAvatar>\n                  <Avatar className={classes.avatar}>\n                    <SubjectIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={paragraph.split(\"|\")[0]} />\n              </ListItem>\n            )\n          )\n        )}\n\n        <ListItem autoFocus button onClick={() => handleListItemClick(\"\")}>\n          <ListItemAvatar>\n            <Avatar>\n              <ClearAllIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Clear\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\n\nexport default function Para(props) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(\"\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    props.paraArr[props.closureCount] = value;\n    setOpen(false);\n    setSelectedValue(value);\n    props.store = value;\n  };\n\n  return (\n    <div>\n      <Typography align=\"left\">{selectedValue}</Typography>\n      <br />\n      <Grid container justify=\"center\">\n        <Button\n          color=\"default\"\n          variant=\"outlined\"\n          aria-label=\"paragraph\"\n          onClick={handleClickOpen}\n        >\n          <SubjectIcon />\n        </Button>\n      </Grid>\n\n      <SimpleDialog\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n        paragraphs={props.paragraphs}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport Para from \"./para\";\n\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  withStyles\n} from \"@material-ui/core/styles\";\n\nimport \"./styles.css\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nconst MUITextField = withStyles({\n  root: {\n    marginTop: \"-1px\",\n    marginBottom: \"1px\"\n  }\n})(TextField);\n\nconst MUIFormControl = withStyles({\n  root: {\n    marginTop: \"-3px\",\n    marginBottom: \"3px\"\n  }\n})(FormControl);\n\nconst MUIButton = withStyles(theme => ({\n  root: {\n    position: \"sticky\",\n    bottom: \"1%\"\n  }\n}))(Button);\n\nconst MUITypography = withStyles({\n  root: {\n    overflow: \"auto\",\n    marginTop: \"15px\",\n    height: \"calc(100% - 18px)\"\n  }\n})(Typography);\n\nlet inputArr = [];\nlet inputCount = -1;\nlet selectArr = [];\nlet selectCount = -1;\nlet paraArr = [];\nlet paraCount = -1;\n\nlet paragraphData = [];\n\nconst CTextField = function() {\n  return (function() {\n    inputCount++;\n    inputArr.push(\"\");\n    let closureCount = inputCount;\n    return (\n      <MUITextField\n        size=\"small\"\n        onChange={e => {\n          inputArr[closureCount] = e.target.value;\n        }}\n      />\n    );\n  })();\n};\n\nconst CSelect = function(match) {\n  return (function() {\n    selectCount++;\n    selectArr.push(\"\");\n    let closureCount = selectCount;\n\n    match = match.substring(1, match.length - 1);\n    const matches = match.split(\"/\");\n    let menus = [];\n\n    matches.forEach(single => {\n      menus.push(<MenuItem value={single}>{single}</MenuItem>);\n    });\n\n    return (\n      <MUIFormControl>\n        <Select\n          onChange={e => {\n            selectArr[closureCount] = e.target.value;\n          }}\n        >\n          {menus}\n        </Select>\n      </MUIFormControl>\n    );\n  })();\n};\n\nconst CParagraph = function() {\n  return (function() {\n    paraCount++;\n    paraArr.push(\"\");\n    let closureCount = paraCount;\n    return (\n      <Para\n        paragraphs={paragraphData}\n        store={paraArr[closureCount]}\n        paraArr={paraArr}\n        closureCount={closureCount}\n      />\n    );\n  })();\n};\n\nconst createSelectors = function(element, index, array) {\n  if (typeof element === \"object\") {\n    return element;\n  }\n\n  const listRegx = /{[\\w\\s-.,;:`\"'()]*\\/.*?}/g;\n  let select = element.split(listRegx);\n\n  let match;\n  let indx = 1;\n\n  while ((match = listRegx.exec(element)) !== null) {\n    select.splice(indx, 0, CSelect(match[0]));\n    indx += 2;\n  }\n\n  select = select.filter(item => item);\n  return select;\n};\n\nconst filterParagraphs = function(element, index, array) {\n  if (typeof element[0] !== \"string\") {\n    return element;\n  }\n  paragraphData = [];\n  // JS bug with trailing last character caused by regex new line\n  ///{.+\\|(.|[\\r\\n])+?}/g;\n  const listRegx = /{.+\\|.+?}/g;\n  console.log(element);\n  let paraData = element.split(listRegx);\n  console.log(paraData);\n  let match;\n\n  while ((match = listRegx.exec(element)) !== null) {\n    paragraphData.push(match);\n  }\n\n  paraData = paraData.filter(item => item);\n  console.log(paraData);\n  return paraData;\n};\n\nconst createParagraphs = function(element, index, array) {\n  if (typeof element[0] !== \"string\") {\n    return element;\n  }\n\n  const listRegx = /{\\*}/g;\n  let paragraph = element.split(listRegx);\n\n  let indx = 1;\n\n  while (listRegx.exec(element) !== null) {\n    paragraph.splice(indx, 0, CParagraph());\n    indx += 2;\n  }\n\n  paragraph = paragraph.filter(item => item);\n  return paragraph;\n};\n\nfunction getAll(sourceStr) {\n  if (sourceStr.length < 1) {\n    return [];\n  }\n\n  inputCount = -1;\n  selectCount = -1;\n\n  // Convert `{_}` to TextField\n  const input = sourceStr.split(\"{_}\");\n  const inputDone = [...input]\n    .map((e, i) => (i < input.length - 1 ? [e, CTextField()] : [e]))\n    .reduce((a, b) => a.concat(b));\n\n  // Convert `{.../.../...}` to Select\n  let selectDone = inputDone.map(createSelectors).flat();\n\n  // Create the paragraphs from `{...|... ....}`\n  let paraFilter = selectDone.map(filterParagraphs).flat();\n\n  // Convert `{*}` to Paragraph\n  let paraDone = paraFilter.map(createParagraphs).flat();\n\n  return paraDone;\n}\n\nexport default function Parse(props) {\n  const data = getAll(props.data);\n\n  const showRaw = () => {\n    let inRaw = 0;\n    let slRaw = 0;\n    let paRaw = 0;\n    let rawList = [];\n\n    // Logic creates empty values trailing, remove them\n    while (inputArr[inputArr.length - 1] === \"\") {\n      inputArr.pop();\n    }\n    while (selectArr[selectArr.length - 1] === \"\") {\n      selectArr.pop();\n    }\n\n    // --- This fixes a bug in a neat hack ---\n    // paragraphs out of order once changes made to {data}\n    let rawCount = 0;\n    data.forEach(dataPoint => {\n      if (dataPoint.props !== undefined) {\n        if (dataPoint.props.store !== undefined) {\n          rawCount++;\n        }\n      }\n    });\n\n    let tParaArr = paraArr.slice(paraArr.length - rawCount, paraArr.length);\n    let divider = paraArr.length / rawCount;\n    for (let i = divider - 1; i >= 0; i--) {\n      for (let j = 0; j < rawCount; j++) {\n        if (tParaArr[j] === \"\" || tParaArr[j] === undefined) {\n          if (paraArr[i + j] !== \"\" && paraArr[i + j] !== undefined) {\n            tParaArr[j] = paraArr[i + j];\n          }\n        }\n      }\n    }\n    // ---\n\n    // Go through each datapoint and extract the required data from them\n    data.forEach(dataPoint => {\n      if (typeof dataPoint === \"string\") {\n        rawList.push(dataPoint);\n      } else if (dataPoint.props.size === \"small\") {\n        rawList.push(inputArr[inRaw]);\n        inRaw++;\n      } else if (dataPoint.props.store !== undefined) {\n        rawList.push(tParaArr[paRaw]);\n        paRaw++;\n      } else {\n        rawList.push(selectArr[slRaw]);\n        slRaw++;\n      }\n    });\n\n    console.log(rawList.join(\"\"));\n    navigator.clipboard.writeText(rawList.join(\"\"));\n  };\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <MUITypography align=\"left\" style={{ whiteSpace: \"pre-line\" }}>\n        {data}\n      </MUITypography>\n      <MUIButton\n        color=\"primary\"\n        onClick={showRaw}\n        variant=\"contained\"\n        startIcon={<FileCopyIcon />}\n      >\n        Copy to clipboard\n      </MUIButton>\n    </ThemeProvider>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\nimport Parse from \"../Parse\";\nimport { setState } from \"statezero\";\nimport dimensions from \"../Shared/dimensions\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: \"100%\"\n  },\n  paper: {\n    padding: theme.spacing(3),\n    color: theme.palette.text.secondary,\n    height: \"100%\"\n  }\n}));\n\nconst MUIGrid = withStyles({\n  root: {\n    height: \"100%\",\n    paddingLeft: \"12px\",\n    paddingRight: \"12px\"\n  }\n})(Grid);\n\nconst MUITextField = withStyles({\n  root: {\n    marginTop: \"15px\"\n  }\n})(TextField);\n\nconst MUIHeader = withStyles({\n  root: {\n    marginTop: \"-15px\",\n    marginBottom: \"2px\"\n  }\n})(Typography);\n\nconst MUIPaper = withStyles({\n  // root: {\n  //   position: \"relative\",\n  //   overflow: \"auto\"\n  // }\n})(Paper);\n\nexport default function Page(props) {\n  const cover = props.cover;\n  const classes = useStyles();\n  const [data, setData] = React.useState(cover.data);\n\n  // Detect if mobile or laptop to orient grid\n  let direction = \"column\";\n  const { height, width } = dimensions();\n  if (width >= height) {\n    direction = \"row\";\n  }\n\n  React.useEffect(() => {\n    setData(cover.data);\n  }, [cover.data]);\n\n  const handleChange = event => {\n    setData(event.target.value);\n    setState(\"cover\", { id: cover._id, data: event.target.value });\n  };\n\n  return (\n    <div className={classes.root}>\n      <MUIGrid container alignItems=\"stretch\" spacing={2} direction={direction}>\n        <MUIGrid item xs>\n          <Paper className={classes.paper}>\n            <MUIHeader variant=\"h6\" noWrap>\n              Hack\n            </MUIHeader>\n            <Divider />\n            <MUITextField\n              id=\"standard-multiline-flexible\"\n              multiline=\"true\"\n              fullWidth=\"true\"\n              InputProps={{ disableUnderline: true }}\n              value={data}\n              onChange={handleChange}\n            />\n          </Paper>\n        </MUIGrid>\n        <MUIGrid item xs>\n          <MUIPaper className={classes.paper}>\n            <MUIHeader variant=\"h6\" noWrap>\n              True\n            </MUIHeader>\n            <Divider />\n            <Parse data={data} />\n          </MUIPaper>\n        </MUIGrid>\n      </MUIGrid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nimport { newCover } from \"../../actions/cover\";\n\nimport \"./styles.css\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1)\n  },\n  overrides: {\n    DialogContentText: {\n      root: {\n        color: \"#00FF00\"\n      }\n    }\n  }\n}));\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiInput: {\n      underline: {\n        \"&:before\": {\n          borderBottom: \"1px solid #FFFFFF44\"\n        },\n        \"&:hover\": {\n          borderBottom: \"1px solid #FFFFFF88\"\n        },\n        \"&:hover:not($disabled):after\": {\n          borderBottom: \"1px solid #FFFFFF\"\n        },\n        \"&:hover:not($disabled):before\": {\n          borderBottom: \"1px solid #FFFFFFAA\"\n        },\n        \"&:after\": {\n          borderBottom: \"1px solid #FFFFFF44\"\n        }\n      }\n    },\n    MuiInputLabel: {\n      root: {\n        color: \"#FFFFFFDC\",\n        \"&$focused\": {\n          color: \"#FFFFFF\"\n        }\n      }\n    }\n  }\n});\n\nexport default function NewCover() {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCreate = () => {\n    newCover(name);\n    setOpen(false);\n  };\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <div className=\"newCover\">\n          <Fab color=\"primary\" aria-label=\"add\" onClick={handleClickOpen}>\n            <AddIcon />\n          </Fab>\n        </div>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n          PaperProps={{\n            style: {\n              backgroundColor: \"#393939\",\n              color: \"#FFFFFFDE\"\n            }\n          }}\n        >\n          <DialogTitle id=\"form-dialog-title\">New Cover Letter</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              <span style={{ color: \"#FFFFFFDE\" }}>\n                To create a new cover letter, please enter the title below.\n              </span>\n            </DialogContentText>\n            <TextField\n              value={name}\n              onChange={handleChange}\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Title\"\n              type=\"text\"\n              fullWidth\n              InputProps={{\n                style: {\n                  color: \"#FFFFFFDE\"\n                }\n              }}\n              onKeyDown={e => {\n                if (e.keyCode === 13) {\n                  handleCreate();\n                }\n              }}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"secondary\" fullWidth=\"true\">\n              Cancel\n            </Button>\n            <Button\n              onClick={handleCreate}\n              color=\"primary\"\n              fullWidth=\"true\"\n            >\n              Create\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </MuiThemeProvider>\n  );\n}\n","import { setState } from \"statezero\";\n\n// Initialize all state paths used by your app as empty.\n// These are the states that you can filter using filterState()\n// as needed by specific components. All component classes that read\n// from these state paths must extend BaseReactComponent class.\n//\n// - currentUser state path is used by the root App component\n// - studentForm and message state paths are used by the StudentForm component\n// - studentList state path is used by the StudentList component\nexport const setEmptyState = () => {\n  setState(\"currentUser\", null);\n  setState(\"loginForm\", { username: \"\", password: \"\" });\n  setState(\"userID\", null);\n\n  // Snackbar login resources\n  setState(\"loginFailed\", false);\n  setState(\"registered\", false);\n  setState(\"passwordShort\", false);\n  setState(\"invalidUsername\", false);\n\n  // Snackbar Cover resources\n  setState(\"coverTitle\", null);\n  setState(\"coverShort\", false);\n  setState(\"coverSuccess\", false);\n\n  // Cover Resources\n  setState(\"cover\", null);\n  setState(\"info\", false);\n  setState(\"deleteC\", false)\n  setState(\"userCovers\", null);\n  setState(\"saveSuccess\", false);\n  setState(\"deleteSuccess\", false);\n\n  setState(\"defaultCover\", {\n    data:\n      \"Begin by creating a new cover letter.\\n\\nThen you can create input forms with {_}.\\n\\nSelectors can be created with {Developer/Engineer/Researcher}.\\n\\nTreat this as you would `MarkDown`!\"\n  });\n};\n","// getState is used to get the value of a state path\n// setState is used to set the value of a state path\nimport { getState, setState } from \"statezero\";\nimport { setEmptyState } from \"./helpers\";\nimport { getUserCovers } from \"./cover\";\n\nexport const readCookie = () => {\n  const url = \"/users/check-session\";\n\n  fetch(url)\n    .then(res => {\n      if (res.status === 200) {\n        return res.json();\n      }\n    })\n    .then(json => {\n      if (json && json.currentUser) {\n        setState(\"currentUser\", json.currentUser);\n        setState(\"userID\", json.userID);\n        getUserCovers();\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const updateLoginForm = field => {\n  const { name, value } = field;\n  setState(`loginForm.${name}`, value);\n};\n\nexport const login = () => {\n  // Create our request constructor with all the parameters we need\n  const request = new Request(\"/users/login\", {\n    method: \"post\",\n    body: JSON.stringify(getState(\"loginForm\")),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  // Send the request with fetch()\n  fetch(request)\n    .then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        setState(\"failedLogin\", true);\n        setTimeout(function() {\n          setState(\"failedLogin\", false);\n        }, 3250);\n      }\n    })\n    .then(json => {\n      if (json.currentUser !== undefined) {\n        setState(\"userID\", json.userID);\n        setState(\"currentUser\", json.currentUser);\n        getUserCovers();\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const register = event => {\n  // Create our request constructor with all the parameters we need\n  const request = new Request(\"/users/register\", {\n    method: \"post\",\n    body: JSON.stringify(getState(\"loginForm\")),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  // Send the request with fetch()\n  fetch(request)\n    .then(res => {\n      if (res.status === 200) {\n        return res.json();\n      }\n    })\n    .then(json => {\n      if (json !== undefined) {\n        // Successful registration\n        setState(\"registered\", true);\n        setTimeout(function() {\n          setState(\"registered\", false);\n        }, 3250);\n\n        login();\n      } else if (getState(\"loginForm\").password.length < 6) {\n        // Short password\n        setState(\"passwordShort\", true);\n        setTimeout(function() {\n          setState(\"passwordShort\", false);\n        }, 3250);\n      } else {\n        // Invalid username\n        setState(\"invalidUsername\", true);\n        setTimeout(function() {\n          setState(\"invalidUsername\", false);\n        }, 3250);\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const logout = () => {\n  const url = \"/users/logout\";\n\n  fetch(url)\n    .then(res => {\n      setEmptyState();\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n","import clsx from \"clsx\";\nimport React, { useState } from \"react\";\n\nimport List from \"@material-ui/core/List\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport Page from \"./page\";\nimport NewCover from \"./new\";\nimport { setState } from \"statezero\";\nimport { logout } from \"../../actions/user\";\nimport { saveUserCover } from \"../../actions/cover\";\n\nconst drawerWidth = 175;\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    height: \"100%\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  titleTypo: {\n    flex: 1\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    position: \"relative\",\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    paddingTop: theme.spacing(8),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth,\n    height: \"100%\",\n    backgroundImage:\n      'url(\"https://cdn.glitch.com/0ae08cca-f72e-4675-be70-b794f4bd0b72%2Fbg.jpg?v=1588962305935\")',\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\"\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  },\n  button: {\n    textTransform: \"none\"\n  },\n  paper: {\n    height: \"100%\",\n    marginLeft: \"12px\",\n    marginRight: \"12px\"\n  }\n}));\n\nexport default function VerticalDrawer(props) {\n  let selectCount = -1;\n  const classes = useStyles();\n  const defaultContent = <Page cover={props.defaultCover} />;\n\n  const [open, setOpen] = useState(false);\n  const [cover, setCover] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [content, setContent] = useState(defaultContent);\n  const [title, setTitle] = useState(\"Welcome to Cover Hack!\");\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const menuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const menuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleInfoOpen = () => {\n    menuClose();\n    setState(\"info\", true);\n  };\n\n  const saveCover = () => {\n    saveUserCover();\n  };\n\n  const deleteCover = () => {\n    setState(\"deleteC\", true)\n  };\n\n  const resetContent = () => {\n    setCover(null);\n    setState(\"cover\", null);\n    setContent(defaultContent);\n    setTitle(\"Welcome to Cover Hack!\");\n    setSelectedIndex(-1);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ThemeProvider theme={darkTheme}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap className={clsx(classes.titleTypo)}>\n              {title}\n            </Typography>\n\n            {/* DELETE - if in a cover, show the delete button*/}\n            {cover ? (\n              <IconButton\n                aria-label=\"more\"\n                aria-controls=\"long-menu\"\n                aria-haspopup=\"true\"\n                onClick={deleteCover}\n              >\n                <DeleteIcon />\n              </IconButton>\n            ) : null}\n\n            {/* SAVE - if in a cover, show the save button */}\n            {cover ? (\n              <IconButton\n                aria-label=\"more\"\n                aria-controls=\"long-menu\"\n                aria-haspopup=\"true\"\n                onClick={saveCover}\n              >\n                <SaveIcon />\n              </IconButton>\n            ) : null}\n\n            {/* MORE - Extra menu items */}\n            <IconButton\n              aria-label=\"more\"\n              aria-controls=\"long-menu\"\n              aria-haspopup=\"true\"\n              onClick={menuOpen}\n            >\n              <MoreVertIcon />\n            </IconButton>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={menuClose}\n            >\n              {/* INFO - opens the info dialogue page */}\n              <MenuItem onClick={handleInfoOpen}>\n                <ListItemIcon>\n                  <InfoIcon fontSize=\"small\" />\n                </ListItemIcon>\n                <Typography>Info</Typography>\n              </MenuItem>\n\n              {/* LOGOUT - Submenu option to log out */}\n              <MenuItem onClick={logout}>\n                <ListItemIcon>\n                  <ExitToAppRoundedIcon fontSize=\"small\" />\n                </ListItemIcon>\n                <Typography>Log out</Typography>\n              </MenuItem>\n            </Menu>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <Button onClick={resetContent} className={classes.button}>\n              Cover Hack\n            </Button>\n            {/*<Typography align=\"left\" variant=\"subtitle1\">\n              Cover Letters\n            </Typography>*/}\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {/* Drawer List - Populates all the cover letters on the drawer */}\n            {props.userCovers\n              ? props.userCovers.map(userCover => {\n                  return (function() {\n                    selectCount++;\n                    let currentDraw = selectCount;\n                    return (\n                      <ListItem\n                        button\n                        selected={selectedIndex === currentDraw}\n                        key={userCover.title}\n                        onClick={event => (\n                          setCover(userCover),\n                          setTitle(userCover.title),\n                          setState(\"cover\", userCover),\n                          setContent(<Page cover={userCover} />),\n                          handleListItemClick(event, currentDraw)\n                        )}\n                      >\n                        <ListItemText primary={userCover.title} />\n                      </ListItem>\n                    );\n                  })();\n                })\n              : null}\n          </List>\n\n          <NewCover />\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open\n          })}\n        >\n          {content}\n        </main>\n      </ThemeProvider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport MUISnackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nexport default function Snackbar(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ThemeProvider theme={darkTheme}>\n        <MUISnackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={props.severity}>\n            {props.message}\n          </Alert>\n        </MUISnackbar>\n      </ThemeProvider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport BaseReactComponent from \"./../BaseReactComponent\";\n\nimport Delete from \"./delete\";\nimport Info from \"../Shared/info\";\nimport VerticalDrawer from \"./drawers\";\nimport Snackbar from \"../Shared/snackbar\";\n\nimport \"./../../App.css\";\nimport \"./styles.css\";\n/* Component for the cover Page */\nclass Cover extends BaseReactComponent {\n  filterState({\n    cover,\n    coverShort,\n    coverSuccess,\n    userCovers,\n    info,\n    deleteC,\n    saveSuccess,\n    defaultCover,\n    currentUser,\n    deleteSuccess\n  }) {\n    return {\n      cover,\n      coverShort,\n      coverSuccess,\n      userCovers,\n      info,\n      deleteC,\n      saveSuccess,\n      defaultCover,\n      currentUser,\n      deleteSuccess\n    };\n  }\n\n  render() {\n    // the filtered states are now on this.state\n    const {\n      cover,\n      coverShort,\n      coverSuccess,\n      userCovers,\n      info,\n      deleteC,\n      saveSuccess,\n      defaultCover,\n      currentUser,\n      deleteSuccess\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <Container className=\"cover\" maxWidth=\"false\" disableGutters=\"true\">\n          <VerticalDrawer userCovers={userCovers} defaultCover={defaultCover} />\n        </Container>\n\n        {coverShort === true && (\n          <Snackbar\n            severity=\"warning\"\n            message=\"Title length has to be between 1 and 12 characters\"\n          />\n        )}\n\n        {coverSuccess === true && (\n          <Snackbar severity=\"success\" message=\"Succesfully created!\" />\n        )}\n        {saveSuccess === true && (\n          <Snackbar severity=\"success\" message=\"Saved\" />\n        )}\n\n        {deleteSuccess === true && (\n          <Snackbar severity=\"success\" message=\"Deleted\" />\n        )}\n\n        {info === true && <Info currentUser={currentUser} />}\n        {deleteC === true && <Delete title={cover.title} />}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Cover;\n","/*  Full Dashboard component */\nimport React from \"react\";\n\nimport \"./styles.css\";\n\n// Importing components\n//import Header from \"./../Header\";\nimport Cover from \"./../Cover\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props.history.push(\"/dashboard\");\n  }\n\n  render() {\n\n    return (\n      <div className=\"App center\">\n        <Cover/>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","/* The Authenticated View (after logging in) */\n\nimport React from \"react\";\n// Importing react-router-dom to use the React Router\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\n\nimport Dashboard from \"./react-components/Dashboard\";\n\nclass MainView extends React.Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route\n                        exact\n                        path={[\"/\", \"/dashboard\"]}\n                        render={({ history }) => (\n                            <Dashboard history={history} />\n                        )}\n                    />\n                    <Route render={() => <div>404 Not found</div>} />\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default MainView;\n","import clsx from \"clsx\";\nimport React from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nimport { updateLoginForm, login } from \"../../actions/user\";\n\nimport \"./styles.css\";\nimport \"./../../App.css\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: \"250px\"\n  }\n}));\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiInput: {\n      underline: {\n        \"&:before\": {\n          borderBottom: \"1px solid #FFFFFF44\"\n        },\n        \"&:hover\": {\n          borderBottom: \"1px solid #FFFFFF88\"\n        },\n        \"&:hover:not($disabled):after\": {\n          borderBottom: \"1px solid #FFFFFF\"\n        },\n        \"&:hover:not($disabled):before\": {\n          borderBottom: \"1px solid #FFFFFFAA\"\n        },\n        \"&:after\": {\n          borderBottom: \"1px solid #FFFFFF44\"\n        }\n      }\n    },\n    MuiInputLabel: {\n      root: {\n        color: \"#FFFFFFDC\",\n        \"&$focused\": {\n          color: \"#FFFFFF\"\n        }\n      }\n    },\n    MuiIconButton: {\n      root: {\n        color: \"#FFFFFFDC\"\n      }\n    },\n    MuiInputBase: {\n      root: {\n        color: \"#FFFFFFDC\"\n      }\n    }\n  }\n});\n\nexport default function InputAdornments() {\n\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    password: \"\",\n    showPassword: false\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value });\n    updateLoginForm(event.target);\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <FormControl\n          fullWidth\n          className={clsx(classes.margin, classes.textField)}\n        >\n          <InputLabel htmlFor=\"standard-adornment-password\">\n            Password\n          </InputLabel>\n          <Input\n            id=\"standard-adornment-password\"\n            type={values.showPassword ? \"text\" : \"password\"}\n            value={values.password}\n            name=\"password\"\n            className=\"password\"\n            margin=\"normal\"\n            fullWidth=\"true\"\n            required=\"true\"\n            onChange={handleChange(\"password\")}\n            onKeyDown={e => {\n              if (e.keyCode === 13) {\n                login();\n              }\n            }}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n      </div>\n    </MuiThemeProvider>\n  );\n}\n","import React from \"react\";\nimport Particles from \"react-particles-js\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport BaseReactComponent from \"./../BaseReactComponent\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\n// Importing actions/required methods\nimport Password from \"./password\";\nimport Snackbar from \"../Shared/snackbar\";\nimport { updateLoginForm, login, register } from \"../../actions/user\";\n\nimport \"./styles.css\";\nimport \"./../../App.css\";\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiInput: {\n      underline: {\n        \"&:before\": {\n          borderBottom: \"1px solid #FFFFFF44\"\n        },\n        \"&:hover\": {\n          borderBottom: \"1px solid #FFFFFF88\"\n        },\n        \"&:hover:not($disabled):after\": {\n          borderBottom: \"1px solid #FFFFFF\"\n        },\n        \"&:hover:not($disabled):before\": {\n          borderBottom: \"1px solid #FFFFFF88\"\n        }\n      }\n    }\n  }\n});\n\nclass Login extends BaseReactComponent {\n  // Prepare all the snackbars\n  filterState({ failedLogin, invalidUsername, passwordShort, registered }) {\n    return { failedLogin, invalidUsername, passwordShort, registered };\n  }\n  \n  render() {\n    const { failedLogin, invalidUsername, passwordShort, registered } = this.state;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div className=\"login__bg-image center\">\n          <Particles />\n          <div className=\"login__card center\">\n            <h2 id=\"login__h2\">Cover Hack</h2>\n\n            <TextField\n              name=\"username\"\n              label=\"Username\"\n              className=\"login__input app__input app__horizontal-center\"\n              margin=\"normal\"\n              autoFocus=\"true\"\n              InputProps={{\n                style: {\n                  color: \"#FFFFFFDE\"\n                }\n              }}\n              onChange={e => updateLoginForm(e.target)}\n              onKeyDown={e => {\n              if (e.keyCode === 13) {\n                login();\n              }\n            }}\n            />\n\n            <Password />\n\n            <div className=\"login__center\">\n              <Button className=\"login__button\" onClick={login}>\n                Log In\n              </Button>\n              <Button className=\"login__button\" onClick={register}>\n                Register\n              </Button>\n            </div>\n          </div>\n          {failedLogin === true && <Snackbar severity=\"error\" message=\"Invalid username/password combination\"/>}\n          {invalidUsername === true && <Snackbar severity=\"error\" message=\"Failed to register, choose a different username\"/>}\n          {passwordShort === true && <Snackbar severity=\"warning\" message=\"Password too short, minimum of 6 characters\"/>}\n          {registered === true && <Snackbar severity=\"success\" message=\"Registered, welcome!\"/>}\n        </div>\n        \n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\n\nimport MainView from \"./MainView\";\nimport Login from \"./react-components/Login\";\nimport HttpsRedirect from \"react-https-redirect\";\nimport BaseReactComponent from \"./react-components/BaseReactComponent\";\n\nimport { readCookie } from \"./actions/user\";\n\nimport \"./App.css\";\n\nclass App extends BaseReactComponent {\n  filterState({ currentUser }) {\n    return { currentUser };\n  }\n\n  constructor(props) {\n    super(props);\n    readCookie();\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <HttpsRedirect>\n        <div className=\"app\">{!currentUser ? <Login /> : <MainView />}</div>\n      </HttpsRedirect>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { startLogging } from \"statezero\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { setEmptyState } from \"./actions/helpers\";\n\nimport \"./index.css\";\n\n// Initially set all state paths needed in your app as empty.\nsetEmptyState();\n\n// startLogging from statezero logs updated state paths to the console\n// as your app sets/unsets state path values (very useful for debugging)\nstartLogging();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}